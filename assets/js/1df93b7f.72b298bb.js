"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[237,11],{5318:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},114:(e,t,r)=>{r.r(t),r.d(t,{default:()=>f});var n=r(353),a=r(8788),o=r(8944),i=r(7378),l=r(7055);const s="features_xdhU",c="container_Pe1m";function d(){return i.createElement("section",{className:s},i.createElement("div",{className:c+" container"},i.createElement("div",{className:"markdown"},i.createElement(l.default,null))))}const p="heroBanner_qdFl",u="buttons_AeoN",m="button_JGCe";function f(){const{siteConfig:e}=(0,n.Z)();return i.createElement(a.Z,{title:`Hello from ${e.title}`,description:"Description will go into a meta tag in <head />"},i.createElement(g,null),i.createElement("main",null,i.createElement(d,null)))}function g(){const{siteConfig:e}=(0,n.Z)();return i.createElement("header",{className:(0,o.Z)("hero hero--primary",p)},i.createElement("div",{className:"container"},i.createElement("h1",{className:"hero__title"},e.title),i.createElement("p",{className:"hero__subtitle"},e.tagline),i.createElement("div",{className:u},i.createElement("a",{href:"/docs/getting-started/tour",className:m},"Quick Tour"),i.createElement("a",{href:"/docs/getting-started",className:m},"Get Started"))))}},7055:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(2685),a=(r(7378),r(5318));const o={title:"Goals",slug:"/goals",sidebar_label:"Overview",sidebar_position:0},i=void 0,l={unversionedId:"goals/overview",id:"goals/overview",title:"Goals",description:"Joist's mission is to bring ActiveRecord-level productivity to TypeScript/Node projects.",source:"@site/docs/goals/overview.md",sourceDirName:"goals",slug:"/goals",permalink:"/docs/goals",draft:!1,editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/goals/overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Goals",slug:"/goals",sidebar_label:"Overview",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration"},next:{title:"Code Generation",permalink:"/docs/goals/code-generation"}},s={},c=[],d={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Joist's mission is to bring ",(0,a.kt)("a",{parentName:"p",href:"https://guides.rubyonrails.org/active_record_basics.html"},"ActiveRecord"),"-level productivity to TypeScript/Node projects."),(0,a.kt)("p",null,"Joist's primary goals/differentiators are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using ",(0,a.kt)("a",{parentName:"li",href:"/docs/goals/code-generation"},"code generation")," to move fast and remove boilerplate"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/goals/avoiding-n-plus-1s"},"Avoiding N+1s")," through first-class ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphql/dataloader"},"dataloader")," integration"),(0,a.kt)("li",{parentName:"ul"},'Strict "load-safe" tracking of ',(0,a.kt)("a",{parentName:"li",href:"/docs/goals/load-safe-relations"},"loaded vs. unloaded collections")," in the type system"),(0,a.kt)("li",{parentName:"ul"},"Robust ",(0,a.kt)("a",{parentName:"li",href:"/docs/modeling/fields"},"domain modeling")," and ",(0,a.kt)("a",{parentName:"li",href:"/docs/modeling/derived-fields"},"reactive fields")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/goals/great-tests"},"Great testing")," with built-in factories and other support")))}p.isMDXComponent=!0}}]);